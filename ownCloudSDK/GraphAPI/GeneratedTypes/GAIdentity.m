//
// GAIdentity.m
// Autogenerated / Managed by ocapigen
// Copyright (C) 2024 ownCloud GmbH. All rights reserved.
//

/*
 * Copyright (C) 2024, ownCloud GmbH.
 *
 * This code is covered by the GNU Public License Version 3.
 *
 * For distribution utilizing Apple mechanisms please see https://owncloud.org/contribute/iOS-license-exception/
 * You should have received a copy of this license along with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.en.html>.
 *
 */

// occgen: includes
#import "GAIdentity.h"

// occgen: type start
@implementation GAIdentity

// occgen: type serialization
+ (nullable instancetype)decodeGraphData:(GAGraphData)structure context:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GAIdentity *instance = [self new];

	GA_SET_REQ(displayName, NSString, Nil);
	GA_MAP(identifier, "id", NSString, Nil);
	GA_MAP(libreGraphUserType, "@libre.graph.userType", NSString, Nil);

	return (instance);
}

// occgen: struct serialization
- (nullable GAGraphStruct)encodeToGraphStructWithContext:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GA_ENC_INIT
	GA_ENC_ADD(_displayName, "displayName", YES);
	GA_ENC_ADD(_identifier, "id", NO);
	GA_ENC_ADD(_libreGraphUserType, "@libre.graph.userType", NO);
	GA_ENC_RETURN
}

// occgen: type native deserialization
+ (BOOL)supportsSecureCoding
{
	return (YES);
}

- (instancetype)initWithCoder:(NSCoder *)decoder
{
	if ((self = [super init]) != nil)
	{
		_displayName = [decoder decodeObjectOfClass:NSString.class forKey:@"displayName"];
		_identifier = [decoder decodeObjectOfClass:NSString.class forKey:@"identifier"];
		_libreGraphUserType = [decoder decodeObjectOfClass:NSString.class forKey:@"libreGraphUserType"];
	}

	return (self);
}

// occgen: type native serialization
- (void)encodeWithCoder:(NSCoder *)coder
{
	[coder encodeObject:_displayName forKey:@"displayName"];
	[coder encodeObject:_identifier forKey:@"identifier"];
	[coder encodeObject:_libreGraphUserType forKey:@"libreGraphUserType"];
}

// occgen: type debug description
- (NSString *)description
{
	return ([NSString stringWithFormat:@"<%@: %p%@%@%@>", NSStringFromClass(self.class), self, ((_displayName!=nil) ? [NSString stringWithFormat:@", displayName: %@", _displayName] : @""), ((_identifier!=nil) ? [NSString stringWithFormat:@", identifier: %@", _identifier] : @""), ((_libreGraphUserType!=nil) ? [NSString stringWithFormat:@", libreGraphUserType: %@", _libreGraphUserType] : @"")]);
}

// occgen: type protected {"locked":true}


// occgen: type end
@end

