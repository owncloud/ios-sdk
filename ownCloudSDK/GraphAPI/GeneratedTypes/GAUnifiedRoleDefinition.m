//
// GAUnifiedRoleDefinition.m
// Autogenerated / Managed by ocapigen
// Copyright (C) 2024 ownCloud GmbH. All rights reserved.
//

/*
 * Copyright (C) 2024, ownCloud GmbH.
 *
 * This code is covered by the GNU Public License Version 3.
 *
 * For distribution utilizing Apple mechanisms please see https://owncloud.org/contribute/iOS-license-exception/
 * You should have received a copy of this license along with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.en.html>.
 *
 */

// occgen: includes
#import "GAUnifiedRoleDefinition.h"
#import "GAUnifiedRolePermission.h"

// occgen: type start
@implementation GAUnifiedRoleDefinition

// occgen: type serialization
+ (nullable instancetype)decodeGraphData:(GAGraphData)structure context:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GAUnifiedRoleDefinition *instance = [self new];

	GA_MAP(desc, "description", NSString, Nil);
	GA_SET(displayName, NSString, Nil);
	GA_MAP(identifier, "id", NSString, Nil);
	GA_SET(rolePermissions, GAUnifiedRolePermission, NSArray.class);
	GA_MAP(libreGraphWeight, "@libre.graph.weight", NSNumber, Nil);

	return (instance);
}

// occgen: struct serialization
- (nullable GAGraphStruct)encodeToGraphStructWithContext:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GA_ENC_INIT
	GA_ENC_ADD(_desc, "description", NO);
	GA_ENC_ADD(_displayName, "displayName", NO);
	GA_ENC_ADD(_identifier, "id", NO);
	GA_ENC_ADD(_rolePermissions, "rolePermissions", NO);
	GA_ENC_ADD(_libreGraphWeight, "@libre.graph.weight", NO);
	GA_ENC_RETURN
}

// occgen: type native deserialization
+ (BOOL)supportsSecureCoding
{
	return (YES);
}

- (instancetype)initWithCoder:(NSCoder *)decoder
{
	if ((self = [super init]) != nil)
	{
		_desc = [decoder decodeObjectOfClass:NSString.class forKey:@"desc"];
		_displayName = [decoder decodeObjectOfClass:NSString.class forKey:@"displayName"];
		_identifier = [decoder decodeObjectOfClass:NSString.class forKey:@"identifier"];
		_rolePermissions = [decoder decodeObjectOfClasses:[NSSet setWithObjects: GAUnifiedRolePermission.class, NSArray.class, nil] forKey:@"rolePermissions"];
		_libreGraphWeight = [decoder decodeObjectOfClass:NSNumber.class forKey:@"libreGraphWeight"];
	}

	return (self);
}

// occgen: type native serialization
- (void)encodeWithCoder:(NSCoder *)coder
{
	[coder encodeObject:_desc forKey:@"desc"];
	[coder encodeObject:_displayName forKey:@"displayName"];
	[coder encodeObject:_identifier forKey:@"identifier"];
	[coder encodeObject:_rolePermissions forKey:@"rolePermissions"];
	[coder encodeObject:_libreGraphWeight forKey:@"libreGraphWeight"];
}

// occgen: type debug description
- (NSString *)description
{
	return ([NSString stringWithFormat:@"<%@: %p%@%@%@%@%@>", NSStringFromClass(self.class), self, ((_desc!=nil) ? [NSString stringWithFormat:@", desc: %@", _desc] : @""), ((_displayName!=nil) ? [NSString stringWithFormat:@", displayName: %@", _displayName] : @""), ((_identifier!=nil) ? [NSString stringWithFormat:@", identifier: %@", _identifier] : @""), ((_rolePermissions!=nil) ? [NSString stringWithFormat:@", rolePermissions: %@", _rolePermissions] : @""), ((_libreGraphWeight!=nil) ? [NSString stringWithFormat:@", libreGraphWeight: %@", _libreGraphWeight] : @"")]);
}

// occgen: type protected {"locked":true}


// occgen: type end
@end

