//
// GAAppRoleAssignment.m
// Autogenerated / Managed by ocapigen
// Copyright (C) 2022 ownCloud GmbH. All rights reserved.
//

/*
 * Copyright (C) 2022, ownCloud GmbH.
 *
 * This code is covered by the GNU Public License Version 3.
 *
 * For distribution utilizing Apple mechanisms please see https://owncloud.org/contribute/iOS-license-exception/
 * You should have received a copy of this license along with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.en.html>.
 *
 */

// occgen: includes
#import "GAAppRoleAssignment.h"

// occgen: type start
@implementation GAAppRoleAssignment

// occgen: type serialization
+ (nullable instancetype)decodeGraphData:(GAGraphData)structure context:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GAAppRoleAssignment *instance = [self new];

	GA_MAP(identifier, "id", NSString, Nil);
	GA_SET(deletedDateTime, NSDate, Nil);
	GA_SET_REQ(appRoleId, NSString, Nil);
	GA_SET(createdDateTime, NSDate, Nil);
	GA_SET(principalDisplayName, NSString, Nil);
	GA_SET_REQ(principalId, NSString, Nil);
	GA_SET(principalType, NSString, Nil);
	GA_SET(resourceDisplayName, NSString, Nil);
	GA_SET_REQ(resourceId, NSString, Nil);

	return (instance);
}

// occgen: type native deserialization
+ (BOOL)supportsSecureCoding
{
	return (YES);
}

- (instancetype)initWithCoder:(NSCoder *)decoder
{
	if ((self = [super init]) != nil)
	{
		_identifier = [decoder decodeObjectOfClass:NSString.class forKey:@"identifier"];
		_deletedDateTime = [decoder decodeObjectOfClass:NSDate.class forKey:@"deletedDateTime"];
		_appRoleId = [decoder decodeObjectOfClass:NSString.class forKey:@"appRoleId"];
		_createdDateTime = [decoder decodeObjectOfClass:NSDate.class forKey:@"createdDateTime"];
		_principalDisplayName = [decoder decodeObjectOfClass:NSString.class forKey:@"principalDisplayName"];
		_principalId = [decoder decodeObjectOfClass:NSString.class forKey:@"principalId"];
		_principalType = [decoder decodeObjectOfClass:NSString.class forKey:@"principalType"];
		_resourceDisplayName = [decoder decodeObjectOfClass:NSString.class forKey:@"resourceDisplayName"];
		_resourceId = [decoder decodeObjectOfClass:NSString.class forKey:@"resourceId"];
	}

	return (self);
}

// occgen: type native serialization
- (void)encodeWithCoder:(NSCoder *)coder
{
	[coder encodeObject:_identifier forKey:@"identifier"];
	[coder encodeObject:_deletedDateTime forKey:@"deletedDateTime"];
	[coder encodeObject:_appRoleId forKey:@"appRoleId"];
	[coder encodeObject:_createdDateTime forKey:@"createdDateTime"];
	[coder encodeObject:_principalDisplayName forKey:@"principalDisplayName"];
	[coder encodeObject:_principalId forKey:@"principalId"];
	[coder encodeObject:_principalType forKey:@"principalType"];
	[coder encodeObject:_resourceDisplayName forKey:@"resourceDisplayName"];
	[coder encodeObject:_resourceId forKey:@"resourceId"];
}

// occgen: type debug description
- (NSString *)description
{
	return ([NSString stringWithFormat:@"<%@: %p%@%@%@%@%@%@%@%@%@>", NSStringFromClass(self.class), self, ((_identifier!=nil) ? [NSString stringWithFormat:@", identifier: %@", _identifier] : @""), ((_deletedDateTime!=nil) ? [NSString stringWithFormat:@", deletedDateTime: %@", _deletedDateTime] : @""), ((_appRoleId!=nil) ? [NSString stringWithFormat:@", appRoleId: %@", _appRoleId] : @""), ((_createdDateTime!=nil) ? [NSString stringWithFormat:@", createdDateTime: %@", _createdDateTime] : @""), ((_principalDisplayName!=nil) ? [NSString stringWithFormat:@", principalDisplayName: %@", _principalDisplayName] : @""), ((_principalId!=nil) ? [NSString stringWithFormat:@", principalId: %@", _principalId] : @""), ((_principalType!=nil) ? [NSString stringWithFormat:@", principalType: %@", _principalType] : @""), ((_resourceDisplayName!=nil) ? [NSString stringWithFormat:@", resourceDisplayName: %@", _resourceDisplayName] : @""), ((_resourceId!=nil) ? [NSString stringWithFormat:@", resourceId: %@", _resourceId] : @"")]);
}

// occgen: type protected {"locked":true}


// occgen: type end
@end

