//
// GAGroup.m
// Autogenerated / Managed by ocapigen
// Copyright (C) 2022 ownCloud GmbH. All rights reserved.
//

/*
 * Copyright (C) 2022, ownCloud GmbH.
 *
 * This code is covered by the GNU Public License Version 3.
 *
 * For distribution utilizing Apple mechanisms please see https://owncloud.org/contribute/iOS-license-exception/
 * You should have received a copy of this license along with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.en.html>.
 *
 */

// occgen: includes
#import "GAGroup.h"
#import "GAUser.h"

// occgen: type start
@implementation GAGroup

// occgen: type serialization {"locked":true}
+ (nullable instancetype)decodeGraphData:(GAGraphData)structure context:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GAGroup *instance = [self new];

	GA_MAP(identifier, "id", NSString, Nil);
	GA_MAP(desc, "description", NSString, Nil);
	GA_SET(displayName, NSString, Nil);
	GA_SET(members, GAUser, NSArray.class);
	GA_SET(onPremisesDomainName, NSString, Nil);
	GA_SET(onPremisesSamAccountName, NSString, Nil);

	return (instance);
}

// occgen: type native deserialization {"locked":true}
+ (BOOL)supportsSecureCoding
{
	return (YES);
}

- (instancetype)initWithCoder:(NSCoder *)decoder
{
	if ((self = [super init]) != nil)
	{
		_identifier = [decoder decodeObjectOfClass:NSString.class forKey:@"identifier"];
		_desc = [decoder decodeObjectOfClass:NSString.class forKey:@"desc"];
		_displayName = [decoder decodeObjectOfClass:NSString.class forKey:@"displayName"];
		_members = [decoder decodeObjectOfClasses:[NSSet setWithObjects: GAUser.class, NSArray.class, nil] forKey:@"members"];
		_onPremisesDomainName = [decoder decodeObjectOfClass:NSString.class forKey:@"onPremisesDomainName"];
		_onPremisesSamAccountName = [decoder decodeObjectOfClass:NSString.class forKey:@"onPremisesSamAccountName"];
	}

	return (self);
}

// occgen: type native serialization {"locked":true}
- (void)encodeWithCoder:(NSCoder *)coder
{
	[coder encodeObject:_identifier forKey:@"identifier"];
	[coder encodeObject:_desc forKey:@"desc"];
	[coder encodeObject:_displayName forKey:@"displayName"];
	[coder encodeObject:_members forKey:@"members"];
	[coder encodeObject:_onPremisesDomainName forKey:@"onPremisesDomainName"];
	[coder encodeObject:_onPremisesSamAccountName forKey:@"onPremisesSamAccountName"];
}

// occgen: type debug description {"locked":true}
- (NSString *)description
{
	return ([NSString stringWithFormat:@"<%@: %p%@%@%@%@%@%@>", NSStringFromClass(self.class), self, ((_identifier!=nil) ? [NSString stringWithFormat:@", identifier: %@", _identifier] : @""), ((_desc!=nil) ? [NSString stringWithFormat:@", desc: %@", _desc] : @""), ((_displayName!=nil) ? [NSString stringWithFormat:@", displayName: %@", _displayName] : @""), ((_members!=nil) ? [NSString stringWithFormat:@", members: %@", _members] : @""), ((_onPremisesDomainName!=nil) ? [NSString stringWithFormat:@", onPremisesDomainName: %@", _onPremisesDomainName] : @""), ((_onPremisesSamAccountName!=nil) ? [NSString stringWithFormat:@", onPremisesSamAccountName: %@", _onPremisesSamAccountName] : @"")]);
}

// occgen: type protected {"locked":true}


// occgen: type end
@end

