//
// GAThumbnail.m
// Autogenerated / Managed by ocapigen
// Copyright (C) 2024 ownCloud GmbH. All rights reserved.
//

/*
 * Copyright (C) 2024, ownCloud GmbH.
 *
 * This code is covered by the GNU Public License Version 3.
 *
 * For distribution utilizing Apple mechanisms please see https://owncloud.org/contribute/iOS-license-exception/
 * You should have received a copy of this license along with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.en.html>.
 *
 */

// occgen: includes
#import "GAThumbnail.h"

// occgen: type start
@implementation GAThumbnail

// occgen: type serialization
+ (nullable instancetype)decodeGraphData:(GAGraphData)structure context:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GAThumbnail *instance = [self new];

	GA_SET(content, NSString, Nil);
	GA_SET(height, NSNumber, Nil);
	GA_SET(sourceItemId, NSString, Nil);
	GA_SET(url, NSString, Nil);
	GA_SET(width, NSNumber, Nil);

	return (instance);
}

// occgen: struct serialization
- (nullable GAGraphStruct)encodeToGraphStructWithContext:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GA_ENC_INIT
	GA_ENC_ADD(_content, "content", NO);
	GA_ENC_ADD(_height, "height", NO);
	GA_ENC_ADD(_sourceItemId, "sourceItemId", NO);
	GA_ENC_ADD(_url, "url", NO);
	GA_ENC_ADD(_width, "width", NO);
	GA_ENC_RETURN
}

// occgen: type native deserialization
+ (BOOL)supportsSecureCoding
{
	return (YES);
}

- (instancetype)initWithCoder:(NSCoder *)decoder
{
	if ((self = [super init]) != nil)
	{
		_content = [decoder decodeObjectOfClass:NSString.class forKey:@"content"];
		_height = [decoder decodeObjectOfClass:NSNumber.class forKey:@"height"];
		_sourceItemId = [decoder decodeObjectOfClass:NSString.class forKey:@"sourceItemId"];
		_url = [decoder decodeObjectOfClass:NSString.class forKey:@"url"];
		_width = [decoder decodeObjectOfClass:NSNumber.class forKey:@"width"];
	}

	return (self);
}

// occgen: type native serialization
- (void)encodeWithCoder:(NSCoder *)coder
{
	[coder encodeObject:_content forKey:@"content"];
	[coder encodeObject:_height forKey:@"height"];
	[coder encodeObject:_sourceItemId forKey:@"sourceItemId"];
	[coder encodeObject:_url forKey:@"url"];
	[coder encodeObject:_width forKey:@"width"];
}

// occgen: type debug description
- (NSString *)description
{
	return ([NSString stringWithFormat:@"<%@: %p%@%@%@%@%@>", NSStringFromClass(self.class), self, ((_content!=nil) ? [NSString stringWithFormat:@", content: %@", _content] : @""), ((_height!=nil) ? [NSString stringWithFormat:@", height: %@", _height] : @""), ((_sourceItemId!=nil) ? [NSString stringWithFormat:@", sourceItemId: %@", _sourceItemId] : @""), ((_url!=nil) ? [NSString stringWithFormat:@", url: %@", _url] : @""), ((_width!=nil) ? [NSString stringWithFormat:@", width: %@", _width] : @"")]);
}

// occgen: type protected {"locked":true}


// occgen: type end
@end

