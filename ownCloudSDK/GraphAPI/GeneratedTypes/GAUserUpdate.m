//
// GAUserUpdate.m
// Autogenerated / Managed by ocapigen
// Copyright (C) 2024 ownCloud GmbH. All rights reserved.
//

/*
 * Copyright (C) 2024, ownCloud GmbH.
 *
 * This code is covered by the GNU Public License Version 3.
 *
 * For distribution utilizing Apple mechanisms please see https://owncloud.org/contribute/iOS-license-exception/
 * You should have received a copy of this license along with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.en.html>.
 *
 */

// occgen: includes
#import "GAUserUpdate.h"
#import "GAAppRoleAssignment.h"
#import "GADrive.h"
#import "GAGroup.h"
#import "GAObjectIdentity.h"
#import "GAPasswordProfile.h"
#import "GASignInActivity.h"

// occgen: type start
@implementation GAUserUpdate

// occgen: type serialization
+ (nullable instancetype)decodeGraphData:(GAGraphData)structure context:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GAUserUpdate *instance = [self new];

	GA_MAP(identifier, "id", NSString, Nil);
	GA_SET(accountEnabled, NSNumber, Nil);
	GA_SET(appRoleAssignments, GAAppRoleAssignment, NSArray.class);
	GA_SET(displayName, NSString, Nil);
	GA_SET(drives, GADrive, NSArray.class);
	GA_SET(drive, GADrive, Nil);
	GA_SET(identities, GAObjectIdentity, NSArray.class);
	GA_SET(mail, NSString, Nil);
	GA_SET(memberOf, GAGroup, NSArray.class);
	GA_SET(onPremisesSamAccountName, NSString, Nil);
	GA_SET(passwordProfile, GAPasswordProfile, Nil);
	GA_SET(surname, NSString, Nil);
	GA_SET(givenName, NSString, Nil);
	GA_SET(userType, NSString, Nil);
	GA_SET(preferredLanguage, NSString, Nil);
	GA_SET(signInActivity, GASignInActivity, Nil);

	return (instance);
}

// occgen: struct serialization
- (nullable GAGraphStruct)encodeToGraphStructWithContext:(nullable GAGraphContext *)context error:(NSError * _Nullable * _Nullable)outError
{
	GA_ENC_INIT
	GA_ENC_ADD(_identifier, "id", NO);
	GA_ENC_ADD(_accountEnabled, "accountEnabled", NO);
	GA_ENC_ADD(_appRoleAssignments, "appRoleAssignments", NO);
	GA_ENC_ADD(_displayName, "displayName", NO);
	GA_ENC_ADD(_drives, "drives", NO);
	GA_ENC_ADD(_drive, "drive", NO);
	GA_ENC_ADD(_identities, "identities", NO);
	GA_ENC_ADD(_mail, "mail", NO);
	GA_ENC_ADD(_memberOf, "memberOf", NO);
	GA_ENC_ADD(_onPremisesSamAccountName, "onPremisesSamAccountName", NO);
	GA_ENC_ADD(_passwordProfile, "passwordProfile", NO);
	GA_ENC_ADD(_surname, "surname", NO);
	GA_ENC_ADD(_givenName, "givenName", NO);
	GA_ENC_ADD(_userType, "userType", NO);
	GA_ENC_ADD(_preferredLanguage, "preferredLanguage", NO);
	GA_ENC_ADD(_signInActivity, "signInActivity", NO);
	GA_ENC_RETURN
}

// occgen: type native deserialization
+ (BOOL)supportsSecureCoding
{
	return (YES);
}

- (instancetype)initWithCoder:(NSCoder *)decoder
{
	if ((self = [super init]) != nil)
	{
		_identifier = [decoder decodeObjectOfClass:NSString.class forKey:@"identifier"];
		_accountEnabled = [decoder decodeObjectOfClass:NSNumber.class forKey:@"accountEnabled"];
		_appRoleAssignments = [decoder decodeObjectOfClasses:[NSSet setWithObjects: GAAppRoleAssignment.class, NSArray.class, nil] forKey:@"appRoleAssignments"];
		_displayName = [decoder decodeObjectOfClass:NSString.class forKey:@"displayName"];
		_drives = [decoder decodeObjectOfClasses:[NSSet setWithObjects: GADrive.class, NSArray.class, nil] forKey:@"drives"];
		_drive = [decoder decodeObjectOfClass:GADrive.class forKey:@"drive"];
		_identities = [decoder decodeObjectOfClasses:[NSSet setWithObjects: GAObjectIdentity.class, NSArray.class, nil] forKey:@"identities"];
		_mail = [decoder decodeObjectOfClass:NSString.class forKey:@"mail"];
		_memberOf = [decoder decodeObjectOfClasses:[NSSet setWithObjects: GAGroup.class, NSArray.class, nil] forKey:@"memberOf"];
		_onPremisesSamAccountName = [decoder decodeObjectOfClass:NSString.class forKey:@"onPremisesSamAccountName"];
		_passwordProfile = [decoder decodeObjectOfClass:GAPasswordProfile.class forKey:@"passwordProfile"];
		_surname = [decoder decodeObjectOfClass:NSString.class forKey:@"surname"];
		_givenName = [decoder decodeObjectOfClass:NSString.class forKey:@"givenName"];
		_userType = [decoder decodeObjectOfClass:NSString.class forKey:@"userType"];
		_preferredLanguage = [decoder decodeObjectOfClass:NSString.class forKey:@"preferredLanguage"];
		_signInActivity = [decoder decodeObjectOfClass:GASignInActivity.class forKey:@"signInActivity"];
	}

	return (self);
}

// occgen: type native serialization
- (void)encodeWithCoder:(NSCoder *)coder
{
	[coder encodeObject:_identifier forKey:@"identifier"];
	[coder encodeObject:_accountEnabled forKey:@"accountEnabled"];
	[coder encodeObject:_appRoleAssignments forKey:@"appRoleAssignments"];
	[coder encodeObject:_displayName forKey:@"displayName"];
	[coder encodeObject:_drives forKey:@"drives"];
	[coder encodeObject:_drive forKey:@"drive"];
	[coder encodeObject:_identities forKey:@"identities"];
	[coder encodeObject:_mail forKey:@"mail"];
	[coder encodeObject:_memberOf forKey:@"memberOf"];
	[coder encodeObject:_onPremisesSamAccountName forKey:@"onPremisesSamAccountName"];
	[coder encodeObject:_passwordProfile forKey:@"passwordProfile"];
	[coder encodeObject:_surname forKey:@"surname"];
	[coder encodeObject:_givenName forKey:@"givenName"];
	[coder encodeObject:_userType forKey:@"userType"];
	[coder encodeObject:_preferredLanguage forKey:@"preferredLanguage"];
	[coder encodeObject:_signInActivity forKey:@"signInActivity"];
}

// occgen: type debug description
- (NSString *)description
{
	return ([NSString stringWithFormat:@"<%@: %p%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@>", NSStringFromClass(self.class), self, ((_identifier!=nil) ? [NSString stringWithFormat:@", identifier: %@", _identifier] : @""), ((_accountEnabled!=nil) ? [NSString stringWithFormat:@", accountEnabled: %@", _accountEnabled] : @""), ((_appRoleAssignments!=nil) ? [NSString stringWithFormat:@", appRoleAssignments: %@", _appRoleAssignments] : @""), ((_displayName!=nil) ? [NSString stringWithFormat:@", displayName: %@", _displayName] : @""), ((_drives!=nil) ? [NSString stringWithFormat:@", drives: %@", _drives] : @""), ((_drive!=nil) ? [NSString stringWithFormat:@", drive: %@", _drive] : @""), ((_identities!=nil) ? [NSString stringWithFormat:@", identities: %@", _identities] : @""), ((_mail!=nil) ? [NSString stringWithFormat:@", mail: %@", _mail] : @""), ((_memberOf!=nil) ? [NSString stringWithFormat:@", memberOf: %@", _memberOf] : @""), ((_onPremisesSamAccountName!=nil) ? [NSString stringWithFormat:@", onPremisesSamAccountName: %@", _onPremisesSamAccountName] : @""), ((_passwordProfile!=nil) ? [NSString stringWithFormat:@", passwordProfile: %@", _passwordProfile] : @""), ((_surname!=nil) ? [NSString stringWithFormat:@", surname: %@", _surname] : @""), ((_givenName!=nil) ? [NSString stringWithFormat:@", givenName: %@", _givenName] : @""), ((_userType!=nil) ? [NSString stringWithFormat:@", userType: %@", _userType] : @""), ((_preferredLanguage!=nil) ? [NSString stringWithFormat:@", preferredLanguage: %@", _preferredLanguage] : @""), ((_signInActivity!=nil) ? [NSString stringWithFormat:@", signInActivity: %@", _signInActivity] : @"")]);
}

// occgen: type protected {"locked":true}


// occgen: type end
@end

